name: Test Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: blogdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Run tests with coverage
      run: |
        dotnet test --no-build --verbosity normal \
          /p:CollectCoverage=true \
          /p:CoverletOutputFormat=lcov \
          /p:CoverletOutput=./coverage/lcov.info

    - name: Publish coverage report as artifact
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: ./coverage/
        retention-days: 30

    - name: Generate coverage summary
      run: |
        echo "## Test Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "Coverage report has been generated and uploaded as an artifact." >> $GITHUB_STEP_SUMMARY
        echo "You can download it from the Artifacts section of this workflow run." >> $GITHUB_STEP_SUMMARY